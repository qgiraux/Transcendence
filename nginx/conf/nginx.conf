events {}

http {

	include /etc/nginx/mime.types;
    proxy_cache_path /var/cache/nginx keys_zone=IMAGE_CACHE:60m levels=1:2 inactive=3h max_size=50m;
	server {
		access_log /dev/stdout;
		listen 443 ssl;
		ssl_protocols TLSv1.3;
		ssl_prefer_server_ciphers on;
		ssl_certificate /etc/nginx/ssl/transcendence.crt;
		ssl_certificate_key /etc/nginx/ssl/transcendence.key;

		root /var/www/html;
		index index.html index.htm;

        #fichiers statiques
		location  ~* \.\w+$ {
				try_files $uri $uri/ = 404;
		}


		location /api/users/ {
			proxy_pass http://user_management:8000/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;  # websocket
			proxy_set_header Connection "upgrade";   #websockets
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

			 if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
				return 204;
				}
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			location /api/users/adduserstats/ {
				return 403;
			}
		}

		location /api/tournament/ {
			proxy_pass http://tournament:8000/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;  # websocket
			proxy_set_header Connection "upgrade";   #websockets
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

			 if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
				return 204;
				}
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api/pong/ {
			proxy_pass http://pong_game:8000/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;  # websocket
			proxy_set_header Connection "upgrade";   #websockets
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

			 if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
				return 204;
				}
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api/friends/ {
			proxy_pass http://friends_list:8000/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;  # websocket
			proxy_set_header Connection "upgrade";   #websockets
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

			 if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
				return 204;
				}
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /ws/pong/ {
			proxy_pass http://pong_game:8000;  # pong service on port 8000
			proxy_http_version 1.1;  # WebSocket needs HTTP/1.1
			proxy_set_header Upgrade $http_upgrade;  # WebSocket header to upgrade connection
			proxy_set_header Connection "upgrade";  # WebSocket header for the upgrade

			# CORS headers for cross-origin requests
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

			# Handling preflight OPTIONS requests for CORS
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
				return 204;  # No content, preflight request accepted
			}

			# Forwarding client connection headers for proxying
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api/avatar/ {
			proxy_pass http://avatar:8000/;
			proxy_http_version 1.1;
			client_max_body_size 10M;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api/chat/ {
			proxy_pass http://chat:8000/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;  # websocket
			proxy_set_header Connection "upgrade";   #websockets
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

			 if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
				return 204;
				}
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /ws/chat/ {
			proxy_pass http://chat:8000;  # Chat service on port 8000
			proxy_http_version 1.1;  # WebSocket needs HTTP/1.1
			proxy_set_header Upgrade $http_upgrade;  # WebSocket header to upgrade connection
			proxy_set_header Connection "upgrade";  # WebSocket header for the upgrade

			# CORS headers for cross-origin requests
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

			# Handling preflight OPTIONS requests for CORS
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
				return 204;  # No content, preflight request accepted
			}

			# Forwarding client connection headers for proxying
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}


		location /api/avatar/picture/ {
            proxy_cache_valid 200 3h;
            proxy_no_cache $http_authorization;
            proxy_cache_methods GET;
            proxy_cache IMAGE_CACHE;
			proxy_pass http://avatar:8000/picture/;
			proxy_http_version 1.1;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header X-Cache-Status $upstream_cache_status;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location  / {
			# sinon index.html
			try_files $uri $uri/  /index.html;
		}

	}

}
